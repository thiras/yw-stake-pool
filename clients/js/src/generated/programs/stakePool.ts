/**
 * This code was AUTOGENERATED using the Codama library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun Codama to update it.
 *
 * @see https://github.com/codama-idl/codama
 */

import {
  containsBytes,
  getU8Encoder,
  type Address,
  type ReadonlyUint8Array,
} from '@solana/kit';
import {
  type ParsedClaimRewardsInstruction,
  type ParsedFundRewardsInstruction,
  type ParsedInitializePoolInstruction,
  type ParsedInitializeStakeAccountInstruction,
  type ParsedStakeInstruction,
  type ParsedUnstakeInstruction,
  type ParsedUpdatePoolInstruction,
} from '../instructions';

export const STAKE_POOL_PROGRAM_ADDRESS =
  'Bdm2SF3wrRLmo2t9MyGKydLHAgU5Bhxif8wN9HNMYfSH' as Address<'Bdm2SF3wrRLmo2t9MyGKydLHAgU5Bhxif8wN9HNMYfSH'>;

export enum StakePoolAccount {
  StakePool,
  StakeAccount,
}

export enum StakePoolInstruction {
  InitializePool,
  InitializeStakeAccount,
  Stake,
  Unstake,
  ClaimRewards,
  UpdatePool,
  FundRewards,
}

export function identifyStakePoolInstruction(
  instruction: { data: ReadonlyUint8Array } | ReadonlyUint8Array
): StakePoolInstruction {
  const data = 'data' in instruction ? instruction.data : instruction;
  if (containsBytes(data, getU8Encoder().encode(0), 0)) {
    return StakePoolInstruction.InitializePool;
  }
  if (containsBytes(data, getU8Encoder().encode(1), 0)) {
    return StakePoolInstruction.InitializeStakeAccount;
  }
  if (containsBytes(data, getU8Encoder().encode(2), 0)) {
    return StakePoolInstruction.Stake;
  }
  if (containsBytes(data, getU8Encoder().encode(3), 0)) {
    return StakePoolInstruction.Unstake;
  }
  if (containsBytes(data, getU8Encoder().encode(4), 0)) {
    return StakePoolInstruction.ClaimRewards;
  }
  if (containsBytes(data, getU8Encoder().encode(5), 0)) {
    return StakePoolInstruction.UpdatePool;
  }
  if (containsBytes(data, getU8Encoder().encode(6), 0)) {
    return StakePoolInstruction.FundRewards;
  }
  throw new Error(
    'The provided instruction could not be identified as a stakePool instruction.'
  );
}

export type ParsedStakePoolInstruction<
  TProgram extends string = 'Bdm2SF3wrRLmo2t9MyGKydLHAgU5Bhxif8wN9HNMYfSH',
> =
  | ({
      instructionType: StakePoolInstruction.InitializePool;
    } & ParsedInitializePoolInstruction<TProgram>)
  | ({
      instructionType: StakePoolInstruction.InitializeStakeAccount;
    } & ParsedInitializeStakeAccountInstruction<TProgram>)
  | ({
      instructionType: StakePoolInstruction.Stake;
    } & ParsedStakeInstruction<TProgram>)
  | ({
      instructionType: StakePoolInstruction.Unstake;
    } & ParsedUnstakeInstruction<TProgram>)
  | ({
      instructionType: StakePoolInstruction.ClaimRewards;
    } & ParsedClaimRewardsInstruction<TProgram>)
  | ({
      instructionType: StakePoolInstruction.UpdatePool;
    } & ParsedUpdatePoolInstruction<TProgram>)
  | ({
      instructionType: StakePoolInstruction.FundRewards;
    } & ParsedFundRewardsInstruction<TProgram>);
